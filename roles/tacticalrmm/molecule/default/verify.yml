---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ../../defaults/main.yml

    - name: Get tacticalrmm Postgres container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_postgres_container_name }}"
      register: result_postgres

    - name: Get tacticalrmm Redis container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_redis_container_name }}"
      register: result_redis

    - name: Get tacticalrmm Typesense container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_typesense_container_name }}"
      register: result_typsense

    - name: Get tacticalrmm Server container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_server_container_name }}"
      register: result_server

    - name: Get tacticalrmm Microservies container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_microservices_container_name }}"
      register: result_microservices

    - name: Get tacticalrmm Machine Learning container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_machinelearning_container_name }}"
      register: result_machinelearning

    - name: Get tacticalrmm Web container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_web_container_name }}"
      register: result_web

    - name: Get tacticalrmm Proxy container state
      community.docker.docker_container_info:
        name: "{{ tacticalrmm_proxy_container_name }}"
      register: result_proxy

    - name: Check if tacticalrmm docker containers are running
      ansible.builtin.assert:
        that:
          - result_postgres.container['State']['Status'] == "running"
          - result_postgres.container['State']['Restarting'] == false
          - result_redis.container['State']['Status'] == "running"
          - result_redis.container['State']['Restarting'] == false
          - result_typsense.container['State']['Status'] == "running"
          - result_typsense.container['State']['Restarting'] == false
          - result_server.container['State']['Status'] == "running"
          - result_server.container['State']['Restarting'] == false
          - result_microservices.container['State']['Status'] == "running"
          - result_microservices.container['State']['Restarting'] == false
          - result_machinelearning.container['State']['Status'] == "running"
          - result_machinelearning.container['State']['Restarting'] == false
          - result_web.container['State']['Status'] == "running"
          - result_web.container['State']['Restarting'] == false
          - result_proxy.container['State']['Status'] == "running"
          - result_proxy.container['State']['Restarting'] == false
