---
- name: Ensure Nginx Docker Container is absent
  docker_container:
    name: nginx-proxy
    state: absent

- name: Nginx Letsencrypt Container is absent
  docker_container:
    name: letsencrypt-nginx-proxy-companion
    state: absent

- name: Traefik Container is absent
  docker_container:
    name: traefik
    state: absent

- name: Create Traefik2 Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik2_data_directory }}"

- name: Template Traefik2 config.toml
  template:
    src: traefik/traefik2.toml
    dest: "{{ traefik2_data_directory }}/traefik.toml"

- name: Traefik2 Docker Container
  docker_container:
    name: traefik2
    image: "{{ traefik2_docker_image }}"
    pull: true
    network_mode: host
    volumes:
      - "{{ traefik2_data_directory }}/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "{{ traefik2_port_http }}:80"
      - "{{ traefik2_port_https }}:443"
      - "{{ traefik2_port_ui }}:8080"
    labels:
      com.centurylinklabs.watchtower.enable: "{{ traefik2_watchtower_enable }}"
      traefik.enable: "true"
      #traefik.http.middlewares.https_redirect.redirectscheme.scheme: https
      #traefik.http.middlewares.https_redirect.redirectscheme.permanent: "true"
      traefik.http.routers.traefik_http.rule: "Host(`traefik.{{ ansible_nas_domain }}`)"
      traefik.http.routers.traefik_http.entrypoints: http
      #traefik.http.routers.traefik_https.tls: "true"
      #traefik.http.routers.traefik_https.tls.certResolver: letsencrypt
      #traefik.http.routers.traefik_https.tls.domains[0].main: "*.{{ domain }}"
      traefik.http.routers.traefik_http.service: api@internal
      traefik.http.routers.http_catchall.rule: "hostregexp(`{host:.+}`)"
      traefik.http.routers.http_catchall.entrypoints: http
      #traefik.http.routers.http_catchall.middlewares: https_redirect
    restart_policy: unless-stopped
    memory: 1g
