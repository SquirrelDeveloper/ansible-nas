"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[9006],{3267:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=t(5893),r=t(1151);const o={title:"Mergerfs"},i=void 0,a={id:"applications/system-tools/mergerfs",title:"Mergerfs",description:"Homepage//github.com/trapexit/mergerfs",source:"@site/docs/applications/system-tools/mergerfs.md",sourceDirName:"applications/system-tools",slug:"/applications/system-tools/mergerfs",permalink:"/ansible-nas/docs/applications/system-tools/mergerfs",draft:!1,unlisted:!1,editUrl:"https://github.com/anarion80/ansible-nas/tree/main/website/docs/applications/system-tools/mergerfs.md",tags:[],version:"current",frontMatter:{title:"Mergerfs"},sidebar:"tutorialSidebar",previous:{title:"Loki",permalink:"/ansible-nas/docs/applications/system-tools/loki"},next:{title:"Minio",permalink:"/ansible-nas/docs/applications/system-tools/minio"}},l={},c=[{value:"Usage",id:"usage",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["Homepage: ",(0,n.jsx)(s.a,{href:"https://github.com/trapexit/mergerfs",children:"https://github.com/trapexit/mergerfs"})]}),"\n",(0,n.jsx)(s.p,{children:"mergerfs is a union filesystem geared towards simplifying storage and management of files across numerous commodity storage devices. It is similar to mhddfs, unionfs, and aufs."}),"\n",(0,n.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(s.p,{children:["Set ",(0,n.jsx)(s.code,{children:"mergerfs_enabled: true"})," in your ",(0,n.jsx)(s.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file.\nSet ",(0,n.jsx)(s.code,{children:"mergerfs_branches"})," to the list of paths you want to merge and ",(0,n.jsx)(s.code,{children:"mergerfs_mount"})," the the resulting merged mount."]}),"\n",(0,n.jsx)(s.p,{children:"This basic setting will create and enable mergerfs systemd service."}),"\n",(0,n.jsxs)(s.p,{children:["For more advanced usage, if you have Rclone installed and ",(0,n.jsx)(s.code,{children:"rclone_mount_enabled"}),", the role will create a service that will merge ",(0,n.jsx)(s.code,{children:"mergerfs_rclone_local_mount"})," and your ",(0,n.jsx)(s.code,{children:"rclone_mount"})," (so your mounted remote) together. This can be further augumented by cloud_upload (TBD) scripts that would periodically sync your ",(0,n.jsx)(s.code,{children:"mergerfs_rclone_local_path"})," to your rclone remote."]})]})}function m(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>a,a:()=>i});var n=t(7294);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);