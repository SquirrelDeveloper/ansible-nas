---
- name: Ensure Nginx Docker Container is absent
  docker_container:
    name: nginx-proxy
    state: absent

- name: Nginx Letsencrypt Container is absent
  docker_container:
    name: letsencrypt-nginx-proxy-companion
    state: absent

- name: Create Traefik Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_data_directory }}"

- name: Template Traefik config.toml
  template:
    src: traefik/traefik.toml
    dest: "{{ traefik_data_directory }}/traefik.toml"

- name: Traefik Docker Container
  docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    pull: true
    network_mode: host
    volumes:
      - "{{ traefik_data_directory }}/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "{{ traefik_port_http }}:80"
      - "{{ traefik_port_https }}:443"
      - "{{ traefik_port_ui }}:8080"
    labels:
      com.centurylinklabs.watchtower.enable: "{{ traefik_watchtower_enable }}"
      traefik.enable: "true"
      traefik.http.routers.traefik-secure.entrypoints: "websecure"
      traefik.http.routers.traefik-secure.rule: "Host(`traefik.{{ ansible_nas_domain }}`)"
      traefik.http.routers.traefik-secure.service: "api@internal"
      traefik.http.routers.traefik.entrypoints: "web"
      traefik.http.routers.traefik.rule: "Host(`traefik.{{ ansible_nas_domain }}`)"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.services.traefik-secure.loadbalancer.server.port: "{{ traefik_port_ui }}"
      traefik.http.services.traefik.loadbalancer.server.port: "{{ traefik_port_ui }}"
      traefik.http.middlewares.traefik-whitelist.ipwhitelist.ipstrategy.depth: "1"
      traefik.http.middlewares.traefik-whitelist.ipwhitelist.sourcerange: "127.0.0.1/32, 192.168.0.0/16"
      traefik.http.routers.traefik.middlewares: "traefik-whitelist"
      traefik.http.routers.traefik-secure.middlewares: "traefik-whitelist"
    restart_policy: unless-stopped
    memory: 1g
