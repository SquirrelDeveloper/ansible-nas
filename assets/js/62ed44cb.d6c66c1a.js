"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[5413],{333:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(5893),r=n(1151);const i={title:"Tt-rss",description:"Free and open source web-based news feed reader"},a=void 0,o={id:"applications/news/ttrss",title:"Tt-rss",description:"Free and open source web-based news feed reader",source:"@site/docs/applications/news/ttrss.md",sourceDirName:"applications/news",slug:"/applications/news/ttrss",permalink:"/ansible-nas/docs/applications/news/ttrss",draft:!1,unlisted:!1,editUrl:"https://github.com/anarion80/ansible-nas/tree/main/website/docs/applications/news/ttrss.md",tags:[],version:"current",frontMatter:{title:"Tt-rss",description:"Free and open source web-based news feed reader"},sidebar:"tutorialSidebar",previous:{title:"RSSHub",permalink:"/ansible-nas/docs/applications/news/rsshub"},next:{title:"Observability",permalink:"/ansible-nas/docs/category/observability"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Plugins",id:"plugins",level:2}];function c(e){const s={a:"a",code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["Homepage: ",(0,t.jsx)(s.a,{href:"https://tt-rss.org/",children:"https://tt-rss.org/"})]}),"\n",(0,t.jsx)(s.p,{children:"Tiny Tiny RSS is a free and open source web-based news feed (RSS/Atom) reader and aggregator."}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:["Set ",(0,t.jsx)(s.code,{children:"ttrss_enabled: true"})," in your ",(0,t.jsx)(s.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file. Set all relevant ",(0,t.jsx)(s.code,{children:"ttrss_*"})," env variables as defined in ",(0,t.jsx)(s.code,{children:"defaults\\main.yml"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Ttrss web interface can be found at ",(0,t.jsx)(s.a,{href:"http://ansible_nas_host_or_ip:8106",children:"http://ansible_nas_host_or_ip:8106"}),". Login with the ",(0,t.jsx)(s.code,{children:"ttrss_user"})," and ",(0,t.jsx)(s.code,{children:"ttrss_user_pass"})," credentials."]}),"\n",(0,t.jsx)(s.h2,{id:"plugins",children:"Plugins"}),"\n",(0,t.jsxs)(s.p,{children:["Optionally, you can enable ",(0,t.jsx)(s.code,{children:"ttrss_plugins_enabled"})," and set ",(0,t.jsx)(s.code,{children:"ttrss_plugins"})," to a list of dictionaries containing a plugin repo, version and a destination under ",(0,t.jsx)(s.code,{children:"plugin.local"})," directory. You might need to set additional environment variables for the plugins, so use ",(0,t.jsx)(s.code,{children:"ttrss_optional_env"})," for that. Consult ",(0,t.jsx)(s.a,{href:"https://tt-rss.org/wiki/Plugins",children:"Tt-rss plugins"})," for reference."]})]})}function p(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>a});var t=n(7294);const r={},i=t.createContext(r);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);